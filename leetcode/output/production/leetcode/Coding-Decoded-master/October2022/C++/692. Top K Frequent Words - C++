Problem Link: https://leetcode.com/problems/top-k-frequent-words/
@author: nileshky1
Solution:

class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        
        map<string, int> m;
        for(int i = 0; i < words.size(); i++) m[words[i]]++;
        
        priority_queue<pair<int, string>> pq;
        for(auto it = m.begin(); it != m.end(); it++)
        {
            pq.push({-(it -> second), it -> first});
            if(pq.size() > k)
                pq.pop();
        }
        
        vector<string> ans;
        while(pq.size())
        {
            ans.push_back(pq.top().second);
            pq.pop();
        }
        reverse(ans.begin(), ans.end());
        
        return ans;
    }
};
